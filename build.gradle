plugins {
  id 'org.springframework.boot' version '2.2.11.RELEASE'
  id 'io.spring.dependency-management' version '1.0.10.RELEASE'
  id 'java'
  id 'com.google.cloud.tools.jib' version '2.7.0'
}

group = 'dev.bigwig'
version = '0.0.1'
sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

configurations {
  developmentOnly
  runtimeClasspath {
    extendsFrom developmentOnly
  }
  compileOnly {
    extendsFrom annotationProcessor
  }
}

repositories {
  mavenCentral()
}

ext {
  set('springCloudAlibabaVersion', "2.2.1.RELEASE")
  set('mapstructVersion', '1.4.1.Final')
  set('knife4jVersion', '3.0.2')
  set('hutoolVersion', '5.5.2')
  set('zxingVersion', '3.4.1')
  set('jjwtVersion', '0.9.1')
  set('poiVersion', '4.1.2')
  set('minioVersion', '8.0.3')
  set('jetbrainsAnnotationVersion', '20.1.0')
  set('retrofitVersion', '2.2.2')
}

dependencies {
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
  implementation 'org.springframework.boot:spring-boot-starter-data-redis'
  implementation 'org.springframework.boot:spring-boot-starter-security'
  implementation('org.springframework.boot:spring-boot-starter-web') {
    exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
  }
  implementation 'org.springframework.boot:spring-boot-starter-undertow'
  implementation 'org.springframework.boot:spring-boot-starter-actuator'
  implementation 'com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-config'
  implementation 'com.fasterxml.jackson.datatype:jackson-datatype-hibernate5'
  implementation 'org.apache.commons:commons-pool2'
  implementation 'javax.validation:validation-api'
  implementation "com.github.xiaoymin:knife4j-spring-boot-starter:${knife4jVersion}"
  implementation "cn.hutool:hutool-all:${hutoolVersion}"
  implementation "com.google.zxing:core:${zxingVersion}"
  implementation "io.jsonwebtoken:jjwt:${jjwtVersion}"
  implementation "org.apache.poi:poi-ooxml:${poiVersion}"
  implementation "io.minio:minio:${minioVersion}"
  implementation "com.github.lianjiatech:retrofit-spring-boot-starter:${retrofitVersion}"
  implementation 'com.google.guava:guava'
  compileOnly 'org.projectlombok:lombok'
  compileOnly "org.mapstruct:mapstruct:${mapstructVersion}"
  compileOnly "org.jetbrains:annotations:${jetbrainsAnnotationVersion}"
  developmentOnly 'org.springframework.boot:spring-boot-devtools'
  runtimeOnly 'com.h2database:h2'
  runtimeOnly 'mysql:mysql-connector-java'
  annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
  annotationProcessor 'org.projectlombok:lombok'
  annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
  annotationProcessor "org.jetbrains:annotations:${jetbrainsAnnotationVersion}"
  testImplementation('org.springframework.boot:spring-boot-starter-test') {
    exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
  }
  testImplementation 'org.springframework.security:spring-security-test'
}

dependencyManagement {
  imports {
    mavenBom "com.alibaba.cloud:spring-cloud-alibaba-dependencies:${springCloudAlibabaVersion}"
  }
}

test {
  useJUnitPlatform()
}

springBoot {
  buildInfo()
}

jib {
  from {
    image = 'adoptopenjdk:11-jre-hotspot'
  }

  to {
    image = 'm01i0ng/bigwig-fast-rest'
    tags = ['latest']
  }

  container {
    expandClasspathDependencies = true
    jvmFlags = ['-Xms512m', '-Xmx512m']
    ports = ['8080']
    creationTime = 'USE_CURRENT_TIMESTAMP'
    environment = [
      TZ: 'Asia/Shanghai'
    ]
  }
}

tasks.build.dependsOn(tasks.jib)
